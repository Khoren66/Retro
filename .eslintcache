[{"/Users/khoren/work/Retro/src/screens/login/Login.js":"1","/Users/khoren/work/Retro/src/Api/index.js":"2","/Users/khoren/work/Retro/src/components/LoginForm.js":"3","/Users/khoren/work/Retro/src/index.js":"4","/Users/khoren/work/Retro/src/screens/board/RetroBoard.js":"5","/Users/khoren/work/Retro/src/screens/admin/Admin.js":"6","/Users/khoren/work/Retro/src/components/Header.js":"7","/Users/khoren/work/Retro/src/components/RetroForm.js":"8","/Users/khoren/work/Retro/src/components/RetroTable.js":"9","/Users/khoren/work/Retro/src/components/Board.js":"10","/Users/khoren/work/Retro/src/reportWebVitals.js":"11","/Users/khoren/work/Retro/src/App.js":"12"},{"size":355,"mtime":1624460390219,"results":"13","hashOfConfig":"14"},{"size":1145,"mtime":1624976370888,"results":"15","hashOfConfig":"14"},{"size":2331,"mtime":1624979152876,"results":"16","hashOfConfig":"14"},{"size":500,"mtime":1606739135933,"results":"17","hashOfConfig":"14"},{"size":703,"mtime":1624530221201,"results":"18","hashOfConfig":"14"},{"size":1389,"mtime":1624977053525,"results":"19","hashOfConfig":"14"},{"size":916,"mtime":1624552088284,"results":"20","hashOfConfig":"14"},{"size":3620,"mtime":1624977245816,"results":"21","hashOfConfig":"14"},{"size":2530,"mtime":1624977148421,"results":"22","hashOfConfig":"14"},{"size":6778,"mtime":1624526832418,"results":"23","hashOfConfig":"14"},{"size":362,"mtime":1606739135934,"results":"24","hashOfConfig":"14"},{"size":794,"mtime":1624521432061,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1b8nmku",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"/Users/khoren/work/Retro/src/screens/login/Login.js",[],["56","57"],"/Users/khoren/work/Retro/src/Api/index.js",["58"],"/Users/khoren/work/Retro/src/components/LoginForm.js",[],"/Users/khoren/work/Retro/src/index.js",[],["59","60"],"/Users/khoren/work/Retro/src/screens/board/RetroBoard.js",["61"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Header from \"../../components/Header\";\nimport Api from \"../../Api/index.js\";\nimport Board from \"../../components/Board\";\nimport \"./retroBoard.css\";\n\nconst RetroBoard = () => {\n  const [retro, setRetro] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    console.log(id, \"IDIIDIIDIDIDIDIDI\");\n    Api.getRetro(id)\n      .get()\n      .then((res) => {\n        setRetro(res.data);\n        console.log(res.data);\n      });\n  }, []);\n\n  return (\n    <div className=\"wrapper-scroll\">\n      <Header retro={retro?retro:\"\"} />\n      <Board />\n    </div>\n  );\n};\n\nexport default RetroBoard;\n",["62","63"],"/Users/khoren/work/Retro/src/screens/admin/Admin.js",["64"],"/Users/khoren/work/Retro/src/components/Header.js",["65","66","67","68","69"],"/Users/khoren/work/Retro/src/components/RetroForm.js",["70","71"],"/Users/khoren/work/Retro/src/components/RetroTable.js",["72","73","74","75","76"],"/Users/khoren/work/Retro/src/components/Board.js",["77","78","79"],"import React, { useEffect, useState,useParams } from \"react\";\nimport \"./board.css\";\nimport { CheckCircleFilled } from \"@ant-design/icons\";\nimport { Card, Typography, Input } from \"antd\";\nimport Api from \"../Api\";\nconst { TextArea } = Input;\n\nconst formWellDefault = {\n  uid: \"\",\n  textWell: \"\",\n};\nconst wellDefault = {\n  uid: \"\",\n  textWell: \"\",\n};\nconst improveDefault = {\n  uid: \"\",\n  textImprove: \"\",\n};\nconst actionDefault = {\n  uid: \"\",\n  textAction: \"\",\n};\nconst formImproveDefault = {\n  uid: \"\",\n  textImprove: \"\",\n};\nconst formActionDefault = {\n  uid: \"\",\n  textAction: \"\",\n};\n\nconst formVisible = {\n  wellVisible: false,\n  improveVisible: false,\n  actionVisible: false,\n};\n\nconst Board = () => {\n  const [wellData, setWell] = useState([]);\n  const [show, setShow] = useState(formVisible);\n  const [formWell, setFormWell] = useState(formWellDefault);\n  const [formImprove, setFormImprove] = useState(formImproveDefault);\n  const [formAction, setFormAction] = useState(formActionDefault);\n  const [improves, setImproves] = useState([]);\n  const [actions, setActions] = useState([]);\n  // const { id } = useParams();\n\n  const handleAddWellComment = () => {\n    console.log(wellData);\n    setWell([...wellData, formWell]);\n    setShow({ ...show, wellVisible: false });\n    setFormWell(wellDefault);\n  };\n\n  const handleAddImproveComment = () => {\n    console.log(improves);\n    setImproves([...improves, formImprove]);\n    setShow({ ...show, improveVisible: false });\n    setFormImprove(improveDefault);\n  };\n\n  const handleAddActionComment = () => {\n    console.log(actions);\n    setActions([...actions, formAction]);\n    setShow({ ...show, actionVisible: false });\n    setFormAction(actionDefault);\n  };\n\n  const handleShowWell = () => {\n    if (show.wellVisible) {\n      setShow({ ...show, wellVisible: false });\n      setFormWell(formWellDefault);\n    } else {\n      setShow({ ...show, wellVisible: true });\n    }\n  };\n  const handleShowImprove = () => {\n    if (show.improveVisible) {\n      setShow({ ...show, improveVisible: false });\n      setFormImprove(formImproveDefault);\n    } else {\n      setShow({ ...show, improveVisible: true });\n    }\n  };\n  const handleShowAction = () => {\n    if (show.actionVisible) {\n      setShow({ ...show, actionVisible: false });\n      setFormAction(formActionDefault);\n    } else {\n      setShow({ ...show, actionVisible: true });\n    }\n  };\n\n  const handleWellChange = ({ target: { name, value } }) => {\n    setFormWell({ ...formWell, [name]: value });\n  };\n\n  const handleImproveChange = ({ target: { name, value } }) => {\n    setFormImprove({ ...formImprove, [name]: value });\n  };\n\n  const handleActionChange = ({ target: { name, value } }) => {\n    setFormAction({ ...formAction, [name]: value });\n  };\n\n  return (\n    <div>\n        <div className=\"retro-headers\">\n          <div>\n            <Typography>\n              <h3>Went well</h3>\n            </Typography>\n            <button onClick={handleShowWell} className=\"prymary-color\">\n              {show.wellVisible ? \"Close\" : \"New\"}\n            </button>\n          </div>\n          <div>\n            <Typography>\n              <h3>To improve</h3>\n            </Typography>\n            <button onClick={handleShowImprove} className=\"prymary-color\">\n              {show.improveVisible ? \"Close\" : \"New\"}\n            </button>\n          </div>\n          <div>\n            <Typography>\n              <h3>Action items</h3>\n            </Typography>\n            <button onClick={handleShowAction} className=\"prymary-color\">\n              {show.actionVisible ? \"Close\" : \"New\"}\n            </button>\n          </div>\n        </div>\n\n      <div className=\"board-columns column-wrapper\">\n        <div className=\"column-style\">\n          <div style={{ width: \"30%\", position: \"absolute\" }}>\n            <TextArea\n              value={formWell.textWell}\n              name=\"textWell\"\n              className=\"text-field\"\n              onChange={handleWellChange}\n              style={{ display: show.wellVisible ? \"inline-block\" : \"none\" }}\n              placeholder=\"What did go well ?\"\n              autoSize={{ minRows: 3, maxRows: 4 }}\n            />\n            <CheckCircleFilled\n              onClick={handleAddWellComment}\n              style={{ display: show.wellVisible ? \"inline-block\" : \"none\" }}\n              className=\"accept-icon\"\n            />\n            {wellData &&\n              wellData.map((item) => {\n                return (\n                  <Card className=\"went-well card-style\">{item.textWell}</Card>\n                );\n              })}\n            <Card className=\"went-well card-style\">Card content</Card>\n          </div>\n        </div>\n\n        <div className=\"column-style\">\n          <div style={{ width: \"30%\", position: \"absolute\" }}>\n            <TextArea\n              value={formImprove.textImprove}\n              name=\"textImprove\"\n              className=\"text-field\"\n              onChange={handleImproveChange}\n              style={{ display: show.improveVisible ? \"inline-block\" : \"none\" }}\n              placeholder=\"What should be improved ?\"\n              autoSize={{ minRows: 3, maxRows: 4 }}\n            />\n            <CheckCircleFilled\n              onClick={handleAddImproveComment}\n              style={{ display: show.improveVisible ? \"inline-block\" : \"none\" }}\n              className=\"accept-icon\"\n            />\n            {improves &&\n              improves.map((item) => {\n                return (\n                  <Card className=\"to-improve card-style\">\n                    {item.textImprove}\n                  </Card>\n                );\n              })}\n            <Card className=\"to-improve card-style\">Card content</Card>\n          </div>\n        </div>\n\n        <div className=\"column-style\">\n          <div style={{ width: \"30%\", position: \"absolute\" }}>\n            <TextArea\n              value={formAction.textAction}\n              name=\"textAction\"\n              className=\"text-field\"\n              style={{ display: show.actionVisible ? \"inline-block\" : \"none\" }}\n              onChange={handleActionChange}\n              placeholder=\"What are we going to do ?\"\n              autoSize={{ minRows: 3, maxRows: 4 }}\n            />\n            <CheckCircleFilled\n              onClick={handleAddActionComment}\n              style={{ display: show.actionVisible ? \"inline-block\" : \"none\" }}\n              className=\"accept-icon\"\n            />\n            {actions &&\n              actions.map((item) => {\n                return (\n                  <Card className=\"actions card-style\">{item.textAction}</Card>\n                );\n              })}\n            <Card className=\"actions card-style\">Card content</Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","/Users/khoren/work/Retro/src/reportWebVitals.js",[],"/Users/khoren/work/Retro/src/App.js",["80","81"],"import \"./App.css\";\nimport Login from \"./screens/login/Login\";\nimport Admin from \"./screens/admin/Admin\";\nimport RetroBoard from \"./screens/board/RetroBoard\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        \n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/admin/\" component={Admin} />\n          <Route exact path=\"/retros/:id\" component={RetroBoard} />\n          RetroBoard\n          <Route render={() => <Redirect to=\"/admin\" />} />\n        </Switch>\n        {/* <Footer /> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":37,"column":1,"nodeType":"88","endLine":42,"endColumn":3},{"ruleId":"82","replacedBy":"89"},{"ruleId":"84","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":19,"column":6,"nodeType":"93","endLine":19,"endColumn":8,"suggestions":"94"},{"ruleId":"82","replacedBy":"95"},{"ruleId":"84","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":28,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"101","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":35},{"ruleId":"97","severity":1,"message":"102","line":2,"column":22,"nodeType":"99","messageId":"100","endLine":2,"endColumn":27},{"ruleId":"97","severity":1,"message":"103","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":11},{"ruleId":"104","severity":1,"message":"105","line":21,"column":9,"nodeType":"106","endLine":21,"endColumn":144},{"ruleId":"97","severity":1,"message":"107","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":17},{"ruleId":"97","severity":1,"message":"108","line":26,"column":7,"nodeType":"99","messageId":"100","endLine":26,"endColumn":14},{"ruleId":"97","severity":1,"message":"109","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"110","line":6,"column":3,"nodeType":"99","messageId":"100","endLine":6,"endColumn":20},{"ruleId":"97","severity":1,"message":"111","line":7,"column":3,"nodeType":"99","messageId":"100","endLine":7,"endColumn":20},{"ruleId":"91","severity":1,"message":"112","line":16,"column":13,"nodeType":"113","endLine":25,"endColumn":4},{"ruleId":"91","severity":1,"message":"114","line":25,"column":6,"nodeType":"93","endLine":25,"endColumn":8,"suggestions":"115"},{"ruleId":"97","severity":1,"message":"101","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"116","line":1,"column":37,"nodeType":"99","messageId":"100","endLine":1,"endColumn":46},{"ruleId":"97","severity":1,"message":"103","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":11},{"ruleId":"97","severity":1,"message":"117","line":11,"column":8,"nodeType":"99","messageId":"100","endLine":11,"endColumn":14},{"ruleId":"97","severity":1,"message":"118","line":12,"column":8,"nodeType":"99","messageId":"100","endLine":12,"endColumn":14},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["119"],["120"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["121"],["119"],["120"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Image' is defined but never used.","'Api' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NavLink' is defined but never used.","'history' is assigned a value but never used.","'axios' is defined but never used.","'CheckCircleFilled' is defined but never used.","'CloseCircleFilled' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'retros'. Either include it or remove the dependency array.",["122"],"'useParams' is defined but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [id]",{"range":"127","text":"128"},"Update the dependencies array to be: [retros]",{"range":"129","text":"130"},[546,548],"[id]",[648,650],"[retros]"]